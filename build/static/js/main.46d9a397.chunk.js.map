{"version":3,"sources":["components/BotCard.js","components/BotCollection.js","components/YourBotArmy.js","components/BotSpecs.js","components/BotsPage.js","components/App.js","index.js"],"names":["botTypeClasses","Assault","Defender","Support","Medic","Witch","Captain","BotCard","_ref","bot","handleClickBotCard","enlistBot","_jsx","className","children","_jsxs","onClick","alt","src","avatar_url","name","bot_class","catchphrase","health","damage","armor","BotCollection","bots","map","id","YourBotArmy","enlistedBots","dischargeBot","handleBotClick","clickedBot","some","b","BotSpecs","goBack","handleEnlist","BotsPage","setBots","useState","setEnlistedBots","selectedBot","setSelectedBot","useEffect","fetchBots","fetch","then","response","json","data","catch","error","console","botId","updatedArmy","filter","handleGoBack","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46d9a397.chunk.js","sourcesContent":["\n\nimport React from 'react';\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction BotCard({ bot, handleClickBotCard, enlistBot }) {\n  const handleEnlist = () => {\n    enlistBot(bot);\n  };\n\n  return (\n    <div className=\"ui column\">\n      <div className=\"ui card\" onClick={() => handleClickBotCard(bot)}>\n        <div className=\"image\">\n          <img alt=\"oh no!\" src={bot.avatar_url} />\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">\n            {bot.name}\n            <i className={botTypeClasses[bot.bot_class]} />\n          </div>\n          <div className=\"meta text-wrap\">\n            <small>{bot.catchphrase}</small>\n          </div>\n        </div>\n        <div className=\"extra content\">\n          <span>\n            <i className=\"icon heartbeat\" />\n            {bot.health}\n          </span>\n\n          <span>\n            <i className=\"icon lightning\" />\n            {bot.damage}\n          </span>\n          <span>\n            <i className=\"icon shield\" />\n            {bot.armor}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BotCard;\n","\n\nimport React from 'react';\nimport BotCard from './BotCard';\n\nfunction BotCollection({ bots, handleClickBotCard, enlistBot }) {\n  return (\n    <div className=\"ui four column grid\">\n      <div className=\"row\">\n        {bots.map((bot) => (\n          <BotCard key={bot.id} bot={bot} handleClickBotCard={handleClickBotCard} enlistBot={enlistBot} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n","import React from \"react\";\n\nfunction YourBotArmy({ enlistedBots, enlistBot, dischargeBot }) {\n  const handleBotClick = (clickedBot) => {\n    if (enlistedBots.some((bot) => bot.id === clickedBot.id)) {\n      dischargeBot(clickedBot.id);\n    } else {\n      enlistBot(clickedBot);\n    }\n  };\n\n  return (\n    <div className=\"ui segment inverted olive bot-army\">\n      <div className=\"ui five column grid\">\n        <div className=\"row bot-army-row\">    \n          <h2>Your Bot Army</h2>\n          <ul>\n            {enlistedBots.map((bot) => (\n              <li key={bot.id} onClick={() => handleBotClick(bot)}>\n                <img src={bot.avatar_url} alt={bot.name} />\n                {bot.name} (Click to {enlistedBots.some((b) => b.id === bot.id) ? \"Discharge\" : \"Enlist\"})\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default YourBotArmy;\n\n","\n\nimport React from 'react';\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction BotSpecs({ bot, goBack, enlistBot }) {\n  const handleEnlist = () => {\n    enlistBot(bot);\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <div className=\"ui two column centered grid\">\n        <div className=\"row\">\n          <div className=\"four wide column\">\n            <img alt=\"oh no!\" className=\"ui medium circular image bordered\" src={bot.avatar_url} />\n          </div>\n          <div className=\"four wide column\">\n            <h2>Name: {bot.name}</h2>\n            <p>\n              <strong>Catchphrase: </strong>\n              {bot.catchphrase}\n            </p>\n            <strong>\n              Class: {bot.bot_class}\n              <i className={botTypeClasses[bot.bot_class]} />\n            </strong>\n            <br />\n            <div className=\"ui segment\">\n              <div className=\"ui three column centered grid\">\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <i className=\"icon large circular red heartbeat\" />\n                    <strong>{bot.health}</strong>\n                  </div>\n                  <div className=\"column\">\n                    <i className=\"icon large circular yellow lightning\" />\n                    <strong>{bot.damage}</strong>\n                  </div>\n                  <div className=\"column\">\n                    <i className=\"icon large circular blue shield\" />\n                    <strong>{bot.armor}</strong>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button className=\"ui button fluid\" onClick={goBack}>\n              Go Back\n            </button>\n            <button className=\"ui button fluid\" onClick={handleEnlist}>\n              Enlist\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BotSpecs;\n","\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs'; \n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  useEffect(() => {\n    fetchBots();\n  }, []);\n\n  const fetchBots = () => {\n    fetch('https://bots-rzaq.onrender.com/bots')\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error('Error fetching bots:', error));\n  };\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((b) => b.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const dischargeBot = (botId) => {\n    const updatedArmy = enlistedBots.filter((bot) => bot.id !== botId);\n    setEnlistedBots(updatedArmy);\n  };\n\n  const handleClickBotCard = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleGoBack = () => {\n    setSelectedBot(null);\n  };\n\n  const handleEnlistInSpecs = (bot) => {\n    enlistBot(bot);\n    setSelectedBot(null);\n  };\n\n  return (\n    <div>\n      <YourBotArmy enlistedBots={enlistedBots} dischargeBot={dischargeBot} />\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} goBack={handleGoBack} enlistBot={handleEnlistInSpecs} />\n      ) : (\n        <BotCollection bots={bots} handleClickBotCard={handleClickBotCard} enlistBot={enlistBot} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n","import React from \"react\";\nimport BotsPage from \"./BotsPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BotsPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}