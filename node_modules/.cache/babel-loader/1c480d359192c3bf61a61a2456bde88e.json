{"ast":null,"code":"import React,{useState,useEffect}from'react';import BotCollection from'./BotCollection';import YourBotArmy from'./YourBotArmy';import BotSpecs from'./BotSpecs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BotsPage(){const[bots,setBots]=useState([]);const[enlistedBots,setEnlistedBots]=useState([]);const[selectedBot,setSelectedBot]=useState(null);useEffect(()=>{fetchBots();},[]);const fetchBots=()=>{fetch('https://bots-rzaq.onrender.com/bots').then(response=>response.json()).then(data=>setBots(data)).catch(error=>console.error('Error fetching bots:',error));};const enlistBot=bot=>{if(!enlistedBots.some(b=>b.id===bot.id)){setEnlistedBots([...enlistedBots,bot]);}};const dischargeBot=botId=>{const updatedArmy=enlistedBots.filter(bot=>bot.id!==botId);setEnlistedBots(updatedArmy);};const handleClickBotCard=bot=>{setSelectedBot(bot);};const handleGoBack=()=>{setSelectedBot(null);};const handleEnlistInSpecs=bot=>{enlistBot(bot);setSelectedBot(null);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(YourBotArmy,{enlistedBots:enlistedBots,dischargeBot:dischargeBot}),selectedBot?/*#__PURE__*/_jsx(BotSpecs,{bot:selectedBot,goBack:handleGoBack,enlistBot:handleEnlistInSpecs}):/*#__PURE__*/_jsx(BotCollection,{bots:bots,handleClickBotCard:handleClickBotCard,enlistBot:enlistBot})]});}export default BotsPage;","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","BotSpecs","jsx","_jsx","jsxs","_jsxs","BotsPage","bots","setBots","enlistedBots","setEnlistedBots","selectedBot","setSelectedBot","fetchBots","fetch","then","response","json","data","catch","error","console","enlistBot","bot","some","b","id","dischargeBot","botId","updatedArmy","filter","handleClickBotCard","handleGoBack","handleEnlistInSpecs","children","goBack"],"sources":["/home/ryan-trent/Downloads/Challenge-2-Bot-Battlr-021023/bots/src/components/BotsPage.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs'; \n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  useEffect(() => {\n    fetchBots();\n  }, []);\n\n  const fetchBots = () => {\n    fetch('https://bots-rzaq.onrender.com/bots')\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error('Error fetching bots:', error));\n  };\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((b) => b.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const dischargeBot = (botId) => {\n    const updatedArmy = enlistedBots.filter((bot) => bot.id !== botId);\n    setEnlistedBots(updatedArmy);\n  };\n\n  const handleClickBotCard = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleGoBack = () => {\n    setSelectedBot(null);\n  };\n\n  const handleEnlistInSpecs = (bot) => {\n    enlistBot(bot);\n    setSelectedBot(null);\n  };\n\n  return (\n    <div>\n      <YourBotArmy enlistedBots={enlistedBots} dischargeBot={dischargeBot} />\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} goBack={handleGoBack} enlistBot={handleEnlistInSpecs} />\n      ) : (\n        <BotCollection bots={bots} handleClickBotCard={handleClickBotCard} enlistBot={enlistBot} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACde,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,SAAS,CAAGA,CAAA,GAAM,CACtBC,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAKV,OAAO,CAACU,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,CACnE,CAAC,CAED,KAAM,CAAAE,SAAS,CAAIC,GAAG,EAAK,CACzB,GAAI,CAACd,YAAY,CAACe,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,GAAKH,GAAG,CAACG,EAAE,CAAC,CAAE,CAC9ChB,eAAe,CAAC,CAAC,GAAGD,YAAY,CAAEc,GAAG,CAAC,CAAC,CACzC,CACF,CAAC,CAED,KAAM,CAAAI,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAAC,WAAW,CAAGpB,YAAY,CAACqB,MAAM,CAAEP,GAAG,EAAKA,GAAG,CAACG,EAAE,GAAKE,KAAK,CAAC,CAClElB,eAAe,CAACmB,WAAW,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAE,kBAAkB,CAAIR,GAAG,EAAK,CAClCX,cAAc,CAACW,GAAG,CAAC,CACrB,CAAC,CAED,KAAM,CAAAS,YAAY,CAAGA,CAAA,GAAM,CACzBpB,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAqB,mBAAmB,CAAIV,GAAG,EAAK,CACnCD,SAAS,CAACC,GAAG,CAAC,CACdX,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,mBACEP,KAAA,QAAA6B,QAAA,eACE/B,IAAA,CAACH,WAAW,EAACS,YAAY,CAAEA,YAAa,CAACkB,YAAY,CAAEA,YAAa,CAAE,CAAC,CACtEhB,WAAW,cACVR,IAAA,CAACF,QAAQ,EAACsB,GAAG,CAAEZ,WAAY,CAACwB,MAAM,CAAEH,YAAa,CAACV,SAAS,CAAEW,mBAAoB,CAAE,CAAC,cAEpF9B,IAAA,CAACJ,aAAa,EAACQ,IAAI,CAAEA,IAAK,CAACwB,kBAAkB,CAAEA,kBAAmB,CAACT,SAAS,CAAEA,SAAU,CAAE,CAC3F,EACE,CAAC,CAEV,CAEA,cAAe,CAAAhB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}